{"version":3,"sources":["webpack://Geese-Shooter/./src/classes/game.js","webpack://Geese-Shooter/./src/classes/game_view.js","webpack://Geese-Shooter/./src/classes/goose.js","webpack://Geese-Shooter/./src/utils/utils.js","webpack://Geese-Shooter/webpack/bootstrap","webpack://Geese-Shooter/./src/index.js"],"names":[],"mappings":";;;;;;;;;AAAA,cAAc,mBAAO,CAAC,uCAAS;AAC/B,aAAa,mBAAO,CAAC,4CAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC,gCAAgC,kCAAkC;AAClE;AACA;AACA;;AAEA;AACA,wD;AACA;AACA,kB;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,8B;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sB;;;;;;;;;;AC3DA,aAAa,mBAAO,CAAC,qCAAQ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;AChBA,aAAa,mBAAO,CAAC,4CAAgB;AACrC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;ACzFA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;UCXA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,iBAAiB,mBAAO,CAAC,uDAAqB;AAC9C,cAAc,mBAAO,CAAC,+CAAiB;;AAEvC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC,E","file":"main.js","sourcesContent":["const Goose = require('./goose');\nconst Util = require('../utils/utils');\n\nclass Game {\n  constructor(options) {\n    this.DIM_X = 900;\n    this.DIM_Y = 550;\n    this.NUM_GEESE = 5;\n    this.geese = [];\n    this.addGoose();\n\n    this.randomPos = this.randomPos.bind(this);\n  }\n\n  addGoose() {\n    for (let i = 0; i < this.NUM_GEESE; i++) {\n      let newGoose = new Goose({pos: this.randomPos(), game: this});\n      this.geese.push(newGoose);\n    }\n  }\n\n  randomPos() {\n    let x = Math.random() > 0.5 ? -99 : this.DIM_X + 99; \n    let y = Math.random() * this.DIM_Y - 70;\n    return [x, y]; \n  }\n\n  draw(cntx) {\n    cntx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    for (let i = 0; i < this.geese.length; i++) {\n      this.geese[i].draw(cntx);\n    }\n  }\n\n  moveObjects() {\n    this.geese.forEach(goose => {\n      goose.move();\n    });\n  }\n\n  wrap(pos, vel) {\n    let x = pos[0];\n    let y = pos[1];\n    let newVel = vel;\n    if (pos[0] > this.DIM_X) { \n      x -= this.DIM_X + 99; \n      y = Math.random() * this.DIM_Y - 70;\n      newVel = Util.randomVec(2);\n    }\n    else if (pos[0] < -99) {\n      x += this.DIM_X + 99;\n      y = Math.random() * this.DIM_Y - 70;\n      newVel = Util.randomVec(2);\n    }\n    return [[x, y], newVel];\n  }\n\n}\n\nmodule.exports = Game;","const Game = require('./game');\n\nclass GameView {\n  constructor(cntx) {\n    this.cntx = cntx;\n    this.game = new Game();\n  }\n\n  start() {\n    setInterval(() => {\n      this.game.moveObjects();\n      this.game.draw(this.cntx);\n    }, 17);\n  }\n}\n\nmodule.exports = GameView;","const Util = require('../utils/utils');\n// const GooseImage = require('../assets/images/goose_sprites.png');\n\nconst canvas = document.getElementById('game-canvas');\nconst cntx = canvas.getContext('2d');\n\n\nclass Goose {\n  constructor(options){\n    this.width = 660;\n    this.height = 660;\n    this.pos = options.pos;\n    this.vel = Util.randomVec(2);\n    this.game = options.game;\n    this.leftAirFrames = [[3, 1], [3, 2]];\n    this.rightAirFrames = [[3, 0], [2, 2]];\n    this.leftGroundFrames = [[0, 2], [1, 2], [2, 0], [2, 1]];\n    this.rightGroundFrames = [[0, 0], [1, 0], [0, 1], [1, 1]];\n    this.counter = 0;\n    this.frameCount = 0;\n    this.img = new Image();\n    this.img.src = \"../src/assets/images/goose_sprites.png\";\n\n    if (this.vel[0] < 0) {\n      if (this.pos[1] < 400) {\n        this.frameX = this.leftAirFrames[0][0];\n        this.frameY = this.leftAirFrames[0][1];\n      } else {\n        this.frameX = this.leftGroundFrames[0][0];\n        this.frameY = this.leftGroundFrames[0][1];\n      }\n    } else {\n      if (this.pos[1] < 400) {\n        this.frameX = this.rightAirFrames[0][0];\n        this.frameY = this.rightAirFrames[0][1];\n      } else {\n        this.frameX = this.rightGroundFrames[0][0];\n        this.frameY = this.rightGroundFrames[0][1];\n      }\n    }\n\n    this.img.onload = () => this.draw();\n  }\n  \n  draw(cntx){\n    this.frameCount += 1;\n    if (this.frameCount === 12) {\n      this.frameCount = 0;\n      this.counter += 1;\n      if (this.vel[0] < 0) {\n        if (this.pos[1] < 400) {\n          this.frameX = this.leftAirFrames[this.counter % 2][0];\n          this.frameY = this.leftAirFrames[this.counter % 2][1];\n        } else {\n          this.frameX = this.leftGroundFrames[this.counter % 4][0];\n          this.frameY = this.leftGroundFrames[this.counter % 4][1];\n        }\n      } else {\n        if (this.pos[1] < 400) {\n          this.frameX = this.rightAirFrames[this.counter % 2][0];\n          this.frameY = this.rightAirFrames[this.counter % 2][1];\n        } else {\n          this.frameX = this.rightGroundFrames[this.counter % 4][0];\n          this.frameY = this.rightGroundFrames[this.counter % 4][1];\n        }\n      }\n    }\n    drawSprite(this.img, this.width * this.frameX, this.height * this.frameY, this.width, this.height,\n      this.pos[0], this.pos[1], this.width * 0.15, this.height * 0.15);\n  }\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    let newVal = this.game.wrap(this.pos, this.vel);\n    this.pos = newVal[0];\n    this.vel = newVal[1];\n  }\n\n}\n\nfunction drawSprite(img, sX, sY, sW, sH, dX, dY, dW, dH){\n  cntx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n}\n\n// function animate(){\n//   cntx.clearRect(0, 0, canvas.width, canvas.height);\n//   newgoose[i].draw();\n//   newgoose[i].move();\n// }\n\nmodule.exports = Goose;","\nconst Util = {\n  scale(vec, mag){\n    return [vec[0] * mag, vec[1] * mag];\n  },\n  randomVec(length) {\n    const deg = Math.random() < 0.5 ? 0 : Math.PI;\n    return Util.scale([Math.cos(deg), Math.sin(deg)], length);\n  }\n};\n\nmodule.exports = Util;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const GameView = require('./classes/game_view');\nconst Goose = require('./classes/goose');\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  const kanvas = document.getElementById(\"game-canvas\");\n  const cntx = kanvas.getContext(\"2d\");\n\n  // testing\n\n  // -------\n  \n  const zaGame = new GameView(cntx);\n  zaGame.start();\n});"],"sourceRoot":""}