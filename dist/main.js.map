{"version":3,"sources":["webpack://Geese-Shooter/./src/classes/bullet.js","webpack://Geese-Shooter/./src/classes/explosion.js","webpack://Geese-Shooter/./src/classes/game.js","webpack://Geese-Shooter/./src/classes/game_view.js","webpack://Geese-Shooter/./src/classes/goose.js","webpack://Geese-Shooter/./src/classes/robot.js","webpack://Geese-Shooter/./src/classes/rocket.js","webpack://Geese-Shooter/./src/utils/utils.js","webpack://Geese-Shooter/webpack/bootstrap","webpack://Geese-Shooter/./src/index.js"],"names":[],"mappings":";;;;;;;;;AAAA,aAAa,mBAAO,CAAC,4CAAgB;AACrC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA,wB;;;;;;;;;;AC5DA,aAAa,mBAAO,CAAC,4CAAgB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,2B;;;;;;;;;;ACpCA,cAAc,mBAAO,CAAC,uCAAS;AAC/B,aAAa,mBAAO,CAAC,uCAAS;AAC9B,kBAAkB,mBAAO,CAAC,+CAAa;AACvC,aAAa,mBAAO,CAAC,4CAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,GAAG,QAAQ;AACjC;;AAEA;AACA,mBAAmB,oBAAoB;AACvC,gCAAgC,kCAAkC;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;;AAEA;AACA,0D;AACA;AACA,kB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM,GAAG,sBAAsB;AACrD;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY,IAAI,MAAM;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB,kBAAkB;AACvC;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oC;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,sB;;;;;;;;;;ACxPA,aAAa,mBAAO,CAAC,qCAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0B;;;;;;;;;;ACpBA,aAAa,mBAAO,CAAC,4CAAgB;AACrC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA,uB;;;;;;;;;;ACrFA,aAAa,mBAAO,CAAC,4CAAgB;AACrC,eAAe,mBAAO,CAAC,yCAAU;AACjC,eAAe,mBAAO,CAAC,yCAAU;AACjC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,O;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;;;;;ACzNA,aAAa,mBAAO,CAAC,4CAAgB;AACrC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA,wB;;;;;;;;;;;AC3DA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;UCXA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,iBAAiB,mBAAO,CAAC,uDAAqB;AAC9C,cAAc,mBAAO,CAAC,+CAAiB;;AAEvC;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,gCAAgC;AACxD,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH,CAAC","file":"main.js","sourcesContent":["const Util = require('../utils/utils');\n// 3520 × 1619\n\nconst canvas = document.getElementById('game-canvas');\nconst cntx = canvas.getContext('2d');\n\n\nclass Bullet {\n  constructor(options){\n    this.width = 580;\n    this.height = 480;\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.game = options.game;\n    this.img = new Image();\n    this.img.src = \"./src/assets/images/projectile_sprites.png\";\n\n    this.sourceX = 0;\n    this.sourceY = 1080;\n\n    this.img.onload = () => this.draw();\n  }\n  \n  draw(cntx){\n    if (this.vel[0] < 0) {\n      this.sourceX = 0;\n    } else {\n      this.sourceX = 590;\n    }\n    drawSprite(this.img, this.sourceX, this.sourceY, this.width, this.height,\n      this.pos[0], this.pos[1], this.width * 0.03, this.height * 0.03);\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n\n    if (this.pos[0] < 0 || this.pos[0] > 900 || this.pos[1] > 550 || this.pos[1] < 0) {\n      this.game.removeBullet();\n    }\n  }\n\n  hit(target) {\n    const bulletX = this.pos[0];\n    const bulletY = this.pos[1];\n    const targetX = target.pos[0];\n    const targetY = target.pos[1];\n    if (bulletX >= targetX && bulletX < targetX + 100 && bulletY >= targetY && bulletY < targetY + 100) {\n      return true;\n    }\n    return false;\n  }\n\n}\n\nfunction drawSprite(img, sX, sY, sW, sH, dX, dY, dW, dH){\n  cntx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n}\n\n\nmodule.exports = Bullet;","const Util = require('../utils/utils');\n// 3520 × 1619\n\nclass Explosion {\n  constructor(options){\n    this.pos = options.pos;\n    this.radius = 80;\n    this.game = options.game;\n  }\n  \n  draw(cntx){\n    var xcolor = cntx.createRadialGradient(this.pos[0], this.pos[1], this.radius - 25, this.pos[0], this.pos[1], this.radius, 100);\n    xcolor.addColorStop(0, \"yellow\");\n    xcolor.addColorStop(1, \"red\");\n\n    cntx.beginPath();\n    cntx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true);\n    cntx.fillStyle = xcolor;\n    cntx.fill();\n  }\n\n  hit(target) {\n    const expX = this.pos[0];\n    const expY = this.pos[1];\n    const targetX = target.pos[0] + 50;\n    const targetY = target.pos[1] + 50;\n    const distance = Math.pow(Math.pow(expX - targetX, 2) + Math.pow(expY - targetY, 2), 0.5);\n    if (distance < 120) {\n      return true;\n    }\n    return false;\n  }\n\n}\n\n\nmodule.exports = Explosion;","const Goose = require('./goose');\nconst Robo = require('./robot');\nconst Explosion = require('./explosion');\nconst Util = require('../utils/utils');\n\nclass Game {\n  constructor(options) {\n    this.DIM_X = 900;\n    this.DIM_Y = 550;\n    this.NUM_GEESE = 8;\n    this.geese = [];\n    this.addGoose();\n    this.bullets = [];\n    this.rockets = [];\n    this.explosions = [];\n    this.robo = new Robo({game: this});\n    this.actionKeys = [];\n    this.points = 0;\n    this.timer = 0;\n    this.randomPos = this.randomPos.bind(this);\n  }\n\n  timePassed() {\n    setInterval(() => {this.timer += 1}, 1000);\n  }\n\n  showProperTime() {\n    let minutes = Math.floor(this.timer / 60).toString();\n    let seconds = (this.timer % 60).toString();\n    if (minutes.length === 1) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds.length === 1) {\n      seconds = \"0\" + seconds;\n    }\n    return `${minutes}:${seconds}`;\n  }\n\n  addGoose() {\n    for (let i = 0; i < this.NUM_GEESE; i++) {\n      let newGoose = new Goose({pos: this.randomPos(), game: this});\n      this.geese.push(newGoose);\n    }\n  }\n\n  removeGoose(theGoose) {\n    this.geese.splice(this.geese.indexOf(theGoose), 1);\n    this.points += 10;\n    let newGoose = new Goose({pos: this.randomPos(), game: this});\n    this.geese.push(newGoose);\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n  }\n\n  removeBullet(bullet) {\n    if (bullet === undefined) {\n      this.bullets.shift();\n    } else {\n      this.bullets.splice(this.bullets.indexOf(bullet), 1);\n    }\n  }\n\n  addRocket(rocket) {\n    this.rockets.push(rocket);\n  }\n\n  removeRocket(rocket) {\n    if (rocket === undefined) {\n      this.rockets.shift();\n    } else {\n      this.rockets.splice(this.rockets.indexOf(rocket), 1);\n    }\n  }\n\n  addExplosion(boom) {\n    this.explosions.push(boom);\n    setTimeout(() => {this.explosions.shift()}, 300);\n  }\n\n  randomPos() {\n    let x = Math.random() > 0.5 ? -100 : this.DIM_X + 100; \n    let y = Math.random() * this.DIM_Y - 70;\n    return [x, y]; \n  }\n\n  draw(cntx) {\n    cntx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    cntx.font = \"100px Comic Sans MS\";\n    cntx.fillStyle = \"gray\";\n    cntx.textAlign = \"left\";\n    cntx.globalAlpha = 0.2;\n    cntx.fillText(`\\u{1F553} ${this.showProperTime()}`, 240, 310);\n    cntx.globalAlpha = 1;\n    for (let i = 0; i < this.geese.length; i++) {\n      this.geese[i].draw(cntx);\n    }\n    this.robo.draw(this.actionKeys);\n    for (let i = 0; i < this.bullets.length; i++) {\n      this.bullets[i].draw(cntx);\n    }\n    for (let i = 0; i < this.rockets.length; i++) {\n      this.rockets[i].draw(cntx);\n    }\n    for (let i = 0; i < this.explosions.length; i++) {\n      this.explosions[i].draw(cntx);\n    }\n    cntx.font = \"30px Comic Sans MS\";\n    cntx.fillStyle = \"black\";\n    cntx.textAlign = \"right\";\n    cntx.fillText(`${this.points} \\u{1F536}`, 870, 60);\n  }\n\n  checkCollision() {\n    const geese = this.geese;\n    const bullets = this.bullets;\n    const rockets = this.rockets;\n    const explosions = this.explosions;\n    for (let i = 0; i < bullets.length; i++) {\n      for (let j = 0; j < geese.length; j++) {\n        if (this.bullets[i].hit(this.geese[j])) {\n          this.removeGoose(this.geese[j]);\n          this.removeBullet(this.bullets[i]);\n        }\n      }\n    }\n    for (let i = 0; i < rockets.length; i++) {\n      for (let j = 0; j < geese.length; j++) {\n        if (this.rockets[i].hit(this.geese[j])) {\n          let site = [this.geese[j].pos[0] + 50, this.geese[j].pos[1] + 50];\n          let boom = new Explosion({pos: site, game: this});\n          this.removeGoose(this.geese[j]);\n          this.removeRocket(this.rockets[i]);\n          this.addExplosion(boom);\n        }\n      }\n    }\n    for (let i = 0; i < explosions.length; i++) {\n      for (let j = 0; j < geese.length; j++) {\n        if (this.explosions[i].hit(this.geese[j])) {\n          this.removeGoose(this.geese[j]);\n        }\n      }\n    }\n    if (this.robo.laserStatus) {\n      for (let j = 0; j < geese.length; j++) {\n        if (this.robo.laserHit(this.geese[j])) {\n          this.removeGoose(this.geese[j]);\n        }\n      }\n    }\n  }\n\n  moveObjects() {\n    this.geese.forEach(goose => {\n      goose.move();\n    });\n    this.bullets.forEach(bullet => {\n      bullet.move();\n    })\n    this.rockets.forEach(rocket => {\n      rocket.move();\n    })\n  }\n\n  wrap(pos, vel) {\n    let x = pos[0];\n    let y = pos[1];\n    let newVel = vel;\n    if (pos[0] > this.DIM_X + 100) { \n      x -= this.DIM_X + 200; \n      y = Math.random() * this.DIM_Y - 70;\n      newVel = Util.randomVec(2);\n    }\n    else if (pos[0] < -100) {\n      x += this.DIM_X + 100;\n      y = Math.random() * this.DIM_Y - 70;\n      newVel = Util.randomVec(2);\n    }\n    return [[x, y], newVel];\n  }\n\n  addKeysListener() {\n    document.addEventListener(\"keydown\", (e) => {\n      switch(e.key) {\n        case \"w\": \n          if (!this.actionKeys.includes(\"up\")) this.actionKeys.push('up');\n          break;\n        case \"a\": \n          if (!this.actionKeys.includes(\"left\")) this.actionKeys.push('left');\n          break;\n        case \"s\": \n          if (!this.actionKeys.includes(\"down\")) this.actionKeys.push('down');\n          break;\n        case \"d\": \n          if (!this.actionKeys.includes(\"right\")) this.actionKeys.push('right');\n          break;\n        case \"1\":\n          this.robo.switchWeapon('pistol');\n          break;\n        case \"2\":\n          this.robo.switchWeapon('rocket');\n          break;\n        case \"3\":\n          this.robo.switchWeapon('laser');\n          break;\n        case \" \":\n          if (this.robo.weapon === 'pistol') {\n            this.robo.fireBullet();\n          } else if (this.robo.weapon === 'rocket') {\n            this.robo.fireRocket();\n          } else if (this.robo.weapon === 'laser') {\n            this.robo.fireLaser();\n          }\n          break;\n      }\n      this.robo.move(this.actionKeys);\n    });\n  }\n\n  removeKeysListener() {\n    document.addEventListener(\"keyup\", (e) => {\n      switch(e.key) {\n        case \"w\": \n          this.actionKeys = this.actionKeys.filter(ele => ele !== \"up\");\n          break;\n        case \"a\": \n          this.actionKeys = this.actionKeys.filter(ele => ele !== \"left\");\n          break;\n        case \"s\": \n          this.actionKeys = this.actionKeys.filter(ele => ele !== \"down\");\n          break;\n        case \"d\": \n          this.actionKeys = this.actionKeys.filter(ele => ele !== \"right\");\n          break;\n        case \" \":\n          if (this.robo.weapon === \"laser\") {\n            this.robo.turnOffLaser();\n          }\n          break;\n      }\n      this.robo.move(this.actionKeys);\n    });\n  }\n\n}\n\nmodule.exports = Game;","const Game = require('./game');\n\nclass GameView {\n  constructor(cntx) {\n    this.cntx = cntx;\n    this.game = new Game();\n    this.game.addKeysListener();\n    this.game.removeKeysListener();\n  }\n\n  start() {\n    this.game.timePassed();\n    setInterval(() => {\n      this.game.checkCollision();\n      this.game.moveObjects();\n      this.game.draw(this.cntx);\n    }, 17);\n  }\n}\n\nmodule.exports = GameView;","const Util = require('../utils/utils');\n// const GooseImage = require('../assets/images/goose_sprites.png');\n\nconst canvas = document.getElementById('game-canvas');\nconst cntx = canvas.getContext('2d');\n\n\nclass Goose {\n  constructor(options){\n    this.width = 660;\n    this.height = 660;\n    this.pos = options.pos;\n    this.vel = Util.randomVec(2);\n    this.game = options.game;\n    this.leftAirFrames = [[3, 1], [3, 2]];\n    this.rightAirFrames = [[3, 0], [2, 2]];\n    this.leftGroundFrames = [[0, 2], [1, 2], [2, 0], [2, 1]];\n    this.rightGroundFrames = [[0, 0], [1, 0], [0, 1], [1, 1]];\n    this.counter = 0;\n    this.frameCount = 0;\n    this.img = new Image();\n    this.img.src = \"./src/assets/images/goose_sprites.png\";\n\n    if (this.vel[0] < 0) {\n      if (this.pos[1] < 400) {\n        this.frameX = this.leftAirFrames[0][0];\n        this.frameY = this.leftAirFrames[0][1];\n      } else {\n        this.frameX = this.leftGroundFrames[0][0];\n        this.frameY = this.leftGroundFrames[0][1];\n      }\n    } else {\n      if (this.pos[1] < 400) {\n        this.frameX = this.rightAirFrames[0][0];\n        this.frameY = this.rightAirFrames[0][1];\n      } else {\n        this.frameX = this.rightGroundFrames[0][0];\n        this.frameY = this.rightGroundFrames[0][1];\n      }\n    }\n\n    this.img.onload = () => this.draw();\n  }\n  \n  draw(cntx){\n    this.frameCount += 1;\n    if (this.frameCount === 12) {\n      this.frameCount = 0;\n      this.counter += 1;\n      if (this.vel[0] < 0) {\n        if (this.pos[1] < 400) {\n          this.frameX = this.leftAirFrames[this.counter % 2][0];\n          this.frameY = this.leftAirFrames[this.counter % 2][1];\n        } else {\n          this.frameX = this.leftGroundFrames[this.counter % 4][0];\n          this.frameY = this.leftGroundFrames[this.counter % 4][1];\n        }\n      } else {\n        if (this.pos[1] < 400) {\n          this.frameX = this.rightAirFrames[this.counter % 2][0];\n          this.frameY = this.rightAirFrames[this.counter % 2][1];\n        } else {\n          this.frameX = this.rightGroundFrames[this.counter % 4][0];\n          this.frameY = this.rightGroundFrames[this.counter % 4][1];\n        }\n      }\n    }\n    drawSprite(this.img, this.width * this.frameX, this.height * this.frameY, this.width, this.height,\n      this.pos[0], this.pos[1], this.width * 0.15, this.height * 0.15);\n  }\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    let newVal = this.game.wrap(this.pos, this.vel);\n    this.pos = newVal[0];\n    this.vel = newVal[1];\n  }\n\n}\n\nfunction drawSprite(img, sX, sY, sW, sH, dX, dY, dW, dH){\n  cntx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n}\n\n\nmodule.exports = Goose;","const Util = require('../utils/utils');\nconst Bullet = require('./bullet');\nconst Rocket = require('./rocket');\n// const RoboImage = require('../assets/images/robo_sprites.png');\n// 1840 × 1280\nconst canvas = document.getElementById('game-canvas');\nconst cntx = canvas.getContext('2d');\n\n\nclass Robot {\n  constructor(options){\n    this.width = 920;\n    this.height = 640;\n    this.pos = [380, 410];\n    this.vel = [10, 10];\n    this.game = options.game;\n    this.leftAirFrames = [0, 0];\n    this.rightAirFrames = [1, 0];\n    this.leftGroundFrames = [0, 1];\n    this.rightGroundFrames = [1, 1];\n    this.img = new Image();\n    this.img.src = \"./src/assets/images/robo_sprites.png\";\n    this.frameX = this.rightGroundFrames[0];\n    this.frameY = this.rightGroundFrames[1];\n    this.weapon = 'pistol';\n    this.laserStatus = false;\n    this.img.onload = () => this.draw();\n  }\n  \n  draw(dirArray) {\n    let firstTwoKeys = dirArray.slice(0, 2);\n    if (firstTwoKeys.includes(\"left\")) {\n      if (this.pos[1] < 400) {\n        this.frameX = this.leftAirFrames[0];\n        this.frameY = this.leftAirFrames[1];\n      } else {\n        this.frameX = this.leftGroundFrames[0];\n        this.frameY = this.leftGroundFrames[1];\n      }\n    } else if (firstTwoKeys.includes(\"right\")){\n      if (this.pos[1] < 400) {\n        this.frameX = this.rightAirFrames[0];\n        this.frameY = this.rightAirFrames[1];\n      } else {\n        this.frameX = this.rightGroundFrames[0];\n        this.frameY = this.rightGroundFrames[1];\n      } \n    } else {\n      if (this.pos[1] < 400) {\n        if (this.frameX === this.leftGroundFrames[0] && this.frameY === this.leftGroundFrames[1]) {\n          this.frameX = this.leftAirFrames[0];\n          this.frameY = this.leftAirFrames[1];\n        } else if (this.frameX === this.rightGroundFrames[0] && this.frameY === this.rightGroundFrames[1]) {\n          this.frameX = this.rightAirFrames[0];\n          this.frameY = this.rightAirFrames[1];\n        }\n      } else {\n        if (this.frameX === this.leftAirFrames[0] && this.frameY === this.leftAirFrames[1]) {\n          this.frameX = this.leftGroundFrames[0];\n          this.frameY = this.leftGroundFrames[1];\n        } else if (this.frameX === this.rightAirFrames[0] && this.frameY === this.rightAirFrames[1]) {\n          this.frameX = this.rightGroundFrames[0];\n          this.frameY = this.rightGroundFrames[1];\n        }\n      }\n    }\n\n    drawSprite(this.img, this.width * this.frameX, this.height * this.frameY, this.width, this.height,\n      this.pos[0], this.pos[1], this.width * 0.15, this.height * 0.15);\n    if (this.laserStatus) {\n      let laserPos;\n      let lineDir;\n      if (this.frameX === this.leftAirFrames[0] || this.frameX === this.leftGroundFrames[0]) {\n        laserPos = [this.pos[0] + 35, this.pos[1] + 65];\n        lineDir = [0 ,laserPos[1]]\n      } else if (this.frameX === this.rightAirFrames[0] || this.frameX === this.rightGroundFrames[0]) {\n        laserPos = [this.pos[0] + 100, this.pos[1] + 65];\n        lineDir = [900, laserPos[1]];\n      }\n      cntx.beginPath();\n      cntx.moveTo(laserPos[0], laserPos[1]);\n      cntx.lineTo(...lineDir);\n      cntx.lineWidth = 5;\n      cntx.strokeStyle = '#ff0000';\n      cntx.stroke();\n    }\n  }\n\n  move(dirArray) {\n    if (dirArray.length === 1){\n      switch(dirArray[0]) {\n        case \"left\":\n          if (this.pos[0] > -40) this.pos[0] -= this.vel[0];\n          break;\n        case \"up\":\n          if (this.pos[1] > -20) this.pos[1] -= this.vel[1];\n          break;\n        case \"right\":\n          if (this.pos[0] < 800) this.pos[0] += this.vel[0];\n          break;\n        case \"down\":\n          if (this.pos[1] < 460) this.pos[1] += this.vel[1];\n          break;\n      }\n    } else if (dirArray.length > 1) {\n      let firstTwoKeys = dirArray.slice(0, 2);\n      if ((firstTwoKeys.includes(\"up\") && firstTwoKeys.includes(\"down\")) || \n          (firstTwoKeys.includes(\"left\") && firstTwoKeys.includes(\"right\"))) {\n            switch(firstTwoKeys[0]) {\n              case \"left\":\n                if (this.pos[0] > -40) this.pos[0] -= this.vel[0];\n                break;\n              case \"up\":\n                if (this.pos[1] > -20) this.pos[1] -= this.vel[1];\n                break;\n              case \"right\":\n                if (this.pos[0] < 800) this.pos[0] += this.vel[0];\n                break;\n              case \"down\":\n                if (this.pos[1] < 460) this.pos[1] += this.vel[1];\n                break;\n            }\n      } else {\n        if (firstTwoKeys.includes(\"up\") && firstTwoKeys.includes(\"left\")) {\n          if (this.pos[0] > -40 && this.pos[1] > -20) {\n            this.pos[0] -= this.vel[0];\n            this.pos[1] -= this.vel[1];\n          }\n        } else if (firstTwoKeys.includes(\"up\") && firstTwoKeys.includes(\"right\")) {\n          if (this.pos[0] < 800 && this.pos[1] > -20) {\n            this.pos[0] += this.vel[0];\n            this.pos[1] -= this.vel[1];\n          }\n        } else if (firstTwoKeys.includes(\"down\") && firstTwoKeys.includes(\"left\")) {\n          if (this.pos[0] > -40 && this.pos[1] < 460) {\n            this.pos[0] -= this.vel[0];\n            this.pos[1] += this.vel[1];\n          }\n        } else if (firstTwoKeys.includes(\"down\") && firstTwoKeys.includes(\"right\")) {\n          if (this.pos[0] < 800 && this.pos[1] < 460) {\n            this.pos[0] += this.vel[0];\n            this.pos[1] += this.vel[1];\n          }\n        }\n      }\n    }\n  }\n\n  switchWeapon(weaponType) {\n    this.weapon = weaponType;\n  }\n\n  fireBullet() {\n    let bulletVel;\n    if (this.frameX === this.leftAirFrames[0] || this.frameX === this.leftGroundFrames[0]) {\n      bulletVel = [-12, 0];\n    } else if (this.frameX === this.rightAirFrames[0] || this.frameX === this.rightGroundFrames[0]) {\n      bulletVel = [12, 0];\n    }\n\n    let bulletPos = [this.pos[0] + 70, this.pos[1] + 50];\n\n    const bullet = new Bullet({\n      pos: bulletPos,\n      vel: bulletVel,\n      game: this.game\n    });\n\n    this.game.addBullet(bullet);\n  }\n\n  fireRocket() {\n    let rocketVel;\n    let rocketPos;\n    if (this.frameX === this.leftAirFrames[0] || this.frameX === this.leftGroundFrames[0]) {\n      rocketVel = [-5, 0];\n      rocketPos = [this.pos[0] - 30, this.pos[1] + 50];\n    } else if (this.frameX === this.rightAirFrames[0] || this.frameX === this.rightGroundFrames[0]) {\n      rocketVel = [5, 0];\n      rocketPos = [this.pos[0] + 70, this.pos[1] + 50];\n    }\n\n    const rocket = new Rocket({\n      pos: rocketPos,\n      vel: rocketVel,\n      game: this.game\n    });\n\n    this.game.addRocket(rocket);\n  }\n\n  fireLaser() {\n    this.laserStatus = true;\n  }\n\n  turnOffLaser() {\n    this.laserStatus = false;\n  }\n\n  laserHit(target) {\n    const laserX = this.pos[0] + 65;\n    const laserY = this.pos[1] + 65;\n    const targetX = target.pos[0];\n    const targetY = target.pos[1];\n    if (this.frameX === this.leftAirFrames[0] || this.frameX === this.leftGroundFrames[0]) {\n      if (laserX >= targetX + 60 && laserY >= targetY && laserY < targetY + 80) return true;\n    } else if (this.frameX === this.rightAirFrames[0] || this.frameX === this.rightGroundFrames[0]) {\n      if (laserX < targetX && laserY >= targetY && laserY < targetY + 80) return true;\n    }\n    return false;\n  }\n}\n\nfunction drawSprite(img, sX, sY, sW, sH, dX, dY, dW, dH){\n  cntx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n}\n\nmodule.exports = Robot;","const Util = require('../utils/utils');\n// 3520 × 1619\n\nconst canvas = document.getElementById('game-canvas');\nconst cntx = canvas.getContext('2d');\n\n\nclass Rocket {\n  constructor(options){\n    this.width = 1760;\n    this.height = 400;\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.game = options.game;\n    this.img = new Image();\n    this.img.src = \"./src/assets/images/projectile_sprites.png\";\n\n    this.sourceX = 0;\n    this.sourceY = 400;\n\n    this.img.onload = () => this.draw();\n  }\n  \n  draw(cntx){\n    if (this.vel[0] < 0) {\n      this.sourceX = 0;\n    } else {\n      this.sourceX = 1760;\n    }\n    drawSprite(this.img, this.sourceX, this.sourceY, this.width, this.height,\n      this.pos[0], this.pos[1], this.width * 0.06, this.height * 0.06);\n  }\n\n  move(){\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n\n    if (this.pos[0] < -100 || this.pos[0] > 900 || this.pos[1] > 550 || this.pos[1] < 0) {\n      this.game.removeRocket();\n    }\n  }\n\n  hit(target) {\n    const rocketX = this.pos[0];\n    const rocketY = this.pos[1];\n    const targetX = target.pos[0];\n    const targetY = target.pos[1];\n    if (rocketX >= targetX - 80 && rocketX < targetX + 60 && rocketY >= targetY - 20 && rocketY < targetY + 80) {\n      return true;\n    }\n    return false;\n  }\n\n}\n\nfunction drawSprite(img, sX, sY, sW, sH, dX, dY, dW, dH){\n  cntx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n}\n\n\nmodule.exports = Rocket;","\nconst Util = {\n  scale(vec, mag){\n    return [vec[0] * mag, vec[1] * mag];\n  },\n  randomVec(length) {\n    const deg = Math.random() < 0.5 ? 0 : Math.PI;\n    return Util.scale([Math.cos(deg), Math.sin(deg)], length);\n  }\n};\n\nmodule.exports = Util;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const GameView = require('./classes/game_view');\nconst Goose = require('./classes/goose');\n\ndocument.addEventListener('load', () => {\n  document.getElementById('theme-music').play();\n});\n  \ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n    \n  const title = document.querySelector('.title-sign');\n  const phrases = document.querySelectorAll('.catchphrases');\n  const menu = document.querySelector('.pre-menu');\n  const startButton = document.querySelector('.start-game');\n  const instructionButton = document.querySelector('.instruction');\n  const instructionPage = document.querySelector('.controls');\n  const backToMenu = document.querySelector('.go-back');\n  const music = document.getElementById('theme-music');\n  const musicIcon = document.getElementById('music-icon');\n  \n  const kanvas = document.getElementById(\"game-canvas\");\n  const cntx = kanvas.getContext(\"2d\");\n\n  music.volume = 0.3;\n\n  title.addEventListener('click', () => {\n    title.classList.add('hidden');\n    phrases.forEach((phrase, idx) => {\n      setTimeout(() => {\n        phrase.classList.remove('hidden');\n        phrase.classList.add('fade-in');\n      }, idx * 3500 + 1000);\n      setTimeout(() => {phrase.classList.add('hidden');}, idx * 3500 + 4000);\n    });\n\n    setTimeout(() => {\n      menu.classList.remove('hidden');\n      menu.classList.add('fade-in');\n    }, 15000);\n  });\n\n  startButton.addEventListener('click', () => {\n    menu.classList.add('hidden');\n    setTimeout(() => {\n      kanvas.classList.remove('hidden');\n      kanvas.classList.add('fade-in');\n      const zaGame = new GameView(cntx);\n      zaGame.start();\n    }, 1000);\n  });\n\n  instructionButton.addEventListener('click', () => {\n    menu.classList.add('hidden');\n    setTimeout(() => {\n      instructionPage.classList.remove('hidden');\n      instructionPage.classList.add('fade-in');\n    }, 1000);\n  });\n\n  backToMenu.addEventListener('click', () => {\n    instructionPage.classList.add('hidden');\n    setTimeout(() => {\n      menu.classList.remove('hidden');\n      menu.classList.add('fade-in');\n    }, 1000);\n  });\n\n  musicIcon.addEventListener('click', () => {\n    if (music.paused) {\n      music.play();\n      musicIcon.src = \"./src/assets/images/music_play_icon.png\";\n    } else {\n      music.pause();\n      musicIcon.src = \"./src/assets/images/music_pause_icon.png\";\n    }\n  });\n\n});\n"],"sourceRoot":""}